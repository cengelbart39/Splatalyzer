{"topicSections":[{"generated":true,"title":"Instance Properties","identifiers":["doc:\/\/Splatalyzer\/documentation\/Splatalyzer\/InkVac\/Parameters-swift.struct\/ExhaleCollisionParameter\/CodingKeys\/hashValue"]},{"identifiers":["doc:\/\/Splatalyzer\/documentation\/Splatalyzer\/InkVac\/Parameters-swift.struct\/ExhaleCollisionParameter\/CodingKeys\/hash(into:)"],"title":"Instance Methods","generated":true}],"variants":[{"paths":["\/documentation\/splatalyzer\/inkvac\/parameters-swift.struct\/exhalecollisionparameter\/codingkeys\/rawrepresentable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"modules":[{"name":"Splatalyzer"}],"role":"collectionGroup","title":"RawRepresentable Implementations"},"kind":"article","hierarchy":{"paths":[["doc:\/\/Splatalyzer\/documentation\/Splatalyzer","doc:\/\/Splatalyzer\/documentation\/Splatalyzer\/InkVac","doc:\/\/Splatalyzer\/documentation\/Splatalyzer\/InkVac\/Parameters-swift.struct","doc:\/\/Splatalyzer\/documentation\/Splatalyzer\/InkVac\/Parameters-swift.struct\/ExhaleCollisionParameter","doc:\/\/Splatalyzer\/documentation\/Splatalyzer\/InkVac\/Parameters-swift.struct\/ExhaleCollisionParameter\/CodingKeys"]]},"identifier":{"url":"doc:\/\/Splatalyzer\/documentation\/Splatalyzer\/InkVac\/Parameters-swift.struct\/ExhaleCollisionParameter\/CodingKeys\/RawRepresentable-Implementations","interfaceLanguage":"swift"},"references":{"splatalyzer.png":{"alt":"The icon for the Splatalyzer package.","type":"image","identifier":"splatalyzer.png","variants":[{"url":"\/images\/splatalyzer.png","traits":["1x","light"]}]},"doc://Splatalyzer/documentation/Splatalyzer":{"identifier":"doc:\/\/Splatalyzer\/documentation\/Splatalyzer","role":"collection","type":"topic","images":[{"type":"icon","identifier":"splatalyzer.png"}],"kind":"symbol","abstract":[{"text":"Gear building and analyzing for Splatoon 3.","type":"text"}],"url":"\/documentation\/splatalyzer","title":"Splatalyzer"},"doc://Splatalyzer/documentation/Splatalyzer/InkVac/Parameters-swift.struct/ExhaleCollisionParameter/CodingKeys":{"type":"topic","abstract":[],"url":"\/documentation\/splatalyzer\/inkvac\/parameters-swift.struct\/exhalecollisionparameter\/codingkeys","identifier":"doc:\/\/Splatalyzer\/documentation\/Splatalyzer\/InkVac\/Parameters-swift.struct\/ExhaleCollisionParameter\/CodingKeys","title":"InkVac.Parameters.ExhaleCollisionParameter.CodingKeys","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodingKeys","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CodingKeys"}],"kind":"symbol"},"doc://Splatalyzer/documentation/Splatalyzer/InkVac/Parameters-swift.struct/ExhaleCollisionParameter":{"type":"topic","url":"\/documentation\/splatalyzer\/inkvac\/parameters-swift.struct\/exhalecollisionparameter","abstract":[],"identifier":"doc:\/\/Splatalyzer\/documentation\/Splatalyzer\/InkVac\/Parameters-swift.struct\/ExhaleCollisionParameter","title":"InkVac.Parameters.ExhaleCollisionParameter","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ExhaleCollisionParameter","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"ExhaleCollisionParameter","kind":"identifier"}],"kind":"symbol"},"doc://Splatalyzer/documentation/Splatalyzer/InkVac/Parameters-swift.struct":{"kind":"symbol","url":"\/documentation\/splatalyzer\/inkvac\/parameters-swift.struct","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Parameters","kind":"identifier"}],"navigatorTitle":[{"text":"Parameters","kind":"identifier"}],"abstract":[],"type":"topic","identifier":"doc:\/\/Splatalyzer\/documentation\/Splatalyzer\/InkVac\/Parameters-swift.struct","title":"InkVac.Parameters"},"doc://Splatalyzer/documentation/Splatalyzer/InkVac":{"identifier":"doc:\/\/Splatalyzer\/documentation\/Splatalyzer\/InkVac","url":"\/documentation\/splatalyzer\/inkvac","navigatorTitle":[{"kind":"identifier","text":"InkVac"}],"role":"symbol","kind":"symbol","abstract":[{"text":"Represents the game parameters of the Ink Vac special weapon","type":"text"}],"type":"topic","title":"InkVac","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"InkVac"}]},"doc://Splatalyzer/documentation/Splatalyzer/InkVac/Parameters-swift.struct/ExhaleCollisionParameter/CodingKeys/hash(into:)":{"title":"hash(into:)","url":"\/documentation\/splatalyzer\/inkvac\/parameters-swift.struct\/exhalecollisionparameter\/codingkeys\/hash(into:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV","text":"Hasher"},{"text":")","kind":"text"}],"abstract":[],"kind":"symbol","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/Splatalyzer\/documentation\/Splatalyzer\/InkVac\/Parameters-swift.struct\/ExhaleCollisionParameter\/CodingKeys\/hash(into:)"},"doc://Splatalyzer/documentation/Splatalyzer/InkVac/Parameters-swift.struct/ExhaleCollisionParameter/CodingKeys/hashValue":{"role":"symbol","abstract":[],"identifier":"doc:\/\/Splatalyzer\/documentation\/Splatalyzer\/InkVac\/Parameters-swift.struct\/ExhaleCollisionParameter\/CodingKeys\/hashValue","kind":"symbol","type":"topic","url":"\/documentation\/splatalyzer\/inkvac\/parameters-swift.struct\/exhalecollisionparameter\/codingkeys\/hashvalue","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}]},"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hashValue","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"title":"hashValue"}}}